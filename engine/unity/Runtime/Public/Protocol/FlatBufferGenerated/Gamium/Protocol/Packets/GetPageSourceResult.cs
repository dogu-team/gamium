// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Gamium.Protocol.Packets
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct GetPageSourceResult : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static GetPageSourceResult GetRootAsGetPageSourceResult(ByteBuffer _bb) { return GetRootAsGetPageSourceResult(_bb, new GetPageSourceResult()); }
  public static GetPageSourceResult GetRootAsGetPageSourceResult(ByteBuffer _bb, GetPageSourceResult obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public GetPageSourceResult __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string PageSource { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPageSourceBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetPageSourceBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetPageSourceArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<Gamium.Protocol.Packets.GetPageSourceResult> CreateGetPageSourceResult(FlatBufferBuilder builder,
      StringOffset page_sourceOffset = default(StringOffset)) {
    builder.StartTable(1);
    GetPageSourceResult.AddPageSource(builder, page_sourceOffset);
    return GetPageSourceResult.EndGetPageSourceResult(builder);
  }

  public static void StartGetPageSourceResult(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddPageSource(FlatBufferBuilder builder, StringOffset pageSourceOffset) { builder.AddOffset(0, pageSourceOffset.Value, 0); }
  public static Offset<Gamium.Protocol.Packets.GetPageSourceResult> EndGetPageSourceResult(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Gamium.Protocol.Packets.GetPageSourceResult>(o);
  }
  public GetPageSourceResultT UnPack() {
    var _o = new GetPageSourceResultT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(GetPageSourceResultT _o) {
    _o.PageSource = this.PageSource;
  }
  public static Offset<Gamium.Protocol.Packets.GetPageSourceResult> Pack(FlatBufferBuilder builder, GetPageSourceResultT _o) {
    if (_o == null) return default(Offset<Gamium.Protocol.Packets.GetPageSourceResult>);
    var _page_source = _o.PageSource == null ? default(StringOffset) : builder.CreateString(_o.PageSource);
    return CreateGetPageSourceResult(
      builder,
      _page_source);
  }
}

public class GetPageSourceResultT
{
  public string PageSource { get; set; }

  public GetPageSourceResultT() {
    this.PageSource = null;
  }
}


}
