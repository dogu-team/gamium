// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Gamium.Protocol
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Request : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static Request GetRootAsRequest(ByteBuffer _bb) { return GetRootAsRequest(_bb, new Request()); }
  public static Request GetRootAsRequest(ByteBuffer _bb, Request obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Request __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Seq { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public Gamium.Protocol.Param ParamType { get { int o = __p.__offset(6); return o != 0 ? (Gamium.Protocol.Param)__p.bb.Get(o + __p.bb_pos) : Gamium.Protocol.Param.NONE; } }
  public TTable? Param<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(8); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public Gamium.Protocol.Packets.HelloParam ParamAsPackets_HelloParam() { return Param<Gamium.Protocol.Packets.HelloParam>().Value; }
  public Gamium.Protocol.Packets.QueryScreenParam ParamAsPackets_QueryScreenParam() { return Param<Gamium.Protocol.Packets.QueryScreenParam>().Value; }
  public Gamium.Protocol.Packets.FindObjectsParam ParamAsPackets_FindObjectsParam() { return Param<Gamium.Protocol.Packets.FindObjectsParam>().Value; }
  public Gamium.Protocol.Packets.QueryObjectInteractableParam ParamAsPackets_QueryObjectInteractableParam() { return Param<Gamium.Protocol.Packets.QueryObjectInteractableParam>().Value; }
  public Gamium.Protocol.Packets.ActionsParam ParamAsPackets_ActionsParam() { return Param<Gamium.Protocol.Packets.ActionsParam>().Value; }
  public Gamium.Protocol.Packets.ExecuteRpcParam ParamAsPackets_ExecuteRpcParam() { return Param<Gamium.Protocol.Packets.ExecuteRpcParam>().Value; }
  public Gamium.Protocol.Packets.InspectObjectOnScreenParam ParamAsPackets_InspectObjectOnScreenParam() { return Param<Gamium.Protocol.Packets.InspectObjectOnScreenParam>().Value; }
  public Gamium.Protocol.Packets.InspectObjectWithIdParam ParamAsPackets_InspectObjectWithIdParam() { return Param<Gamium.Protocol.Packets.InspectObjectWithIdParam>().Value; }
  public Gamium.Protocol.Packets.DumpObjectsHierarchyParam ParamAsPackets_DumpObjectsHierarchyParam() { return Param<Gamium.Protocol.Packets.DumpObjectsHierarchyParam>().Value; }
  public Gamium.Protocol.Packets.ChangeConfigurationParam ParamAsPackets_ChangeConfigurationParam() { return Param<Gamium.Protocol.Packets.ChangeConfigurationParam>().Value; }
  public Gamium.Protocol.Packets.QueryProfileParam ParamAsPackets_QueryProfileParam() { return Param<Gamium.Protocol.Packets.QueryProfileParam>().Value; }

  public static Offset<Gamium.Protocol.Request> CreateRequest(FlatBufferBuilder builder,
      uint seq = 0,
      Gamium.Protocol.Param param_type = Gamium.Protocol.Param.NONE,
      int paramOffset = 0) {
    builder.StartTable(3);
    Request.AddParam(builder, paramOffset);
    Request.AddSeq(builder, seq);
    Request.AddParamType(builder, param_type);
    return Request.EndRequest(builder);
  }

  public static void StartRequest(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddSeq(FlatBufferBuilder builder, uint seq) { builder.AddUint(0, seq, 0); }
  public static void AddParamType(FlatBufferBuilder builder, Gamium.Protocol.Param paramType) { builder.AddByte(1, (byte)paramType, 0); }
  public static void AddParam(FlatBufferBuilder builder, int paramOffset) { builder.AddOffset(2, paramOffset, 0); }
  public static Offset<Gamium.Protocol.Request> EndRequest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Gamium.Protocol.Request>(o);
  }
  public static void FinishRequestBuffer(FlatBufferBuilder builder, Offset<Gamium.Protocol.Request> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedRequestBuffer(FlatBufferBuilder builder, Offset<Gamium.Protocol.Request> offset) { builder.FinishSizePrefixed(offset.Value); }
  public RequestT UnPack() {
    var _o = new RequestT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RequestT _o) {
    _o.Seq = this.Seq;
    _o.Param = new Gamium.Protocol.ParamUnion();
    _o.Param.Type = this.ParamType;
    switch (this.ParamType) {
      default: break;
      case Gamium.Protocol.Param.Packets_HelloParam:
        _o.Param.Value = this.Param<Gamium.Protocol.Packets.HelloParam>().HasValue ? this.Param<Gamium.Protocol.Packets.HelloParam>().Value.UnPack() : null;
        break;
      case Gamium.Protocol.Param.Packets_QueryScreenParam:
        _o.Param.Value = this.Param<Gamium.Protocol.Packets.QueryScreenParam>().HasValue ? this.Param<Gamium.Protocol.Packets.QueryScreenParam>().Value.UnPack() : null;
        break;
      case Gamium.Protocol.Param.Packets_FindObjectsParam:
        _o.Param.Value = this.Param<Gamium.Protocol.Packets.FindObjectsParam>().HasValue ? this.Param<Gamium.Protocol.Packets.FindObjectsParam>().Value.UnPack() : null;
        break;
      case Gamium.Protocol.Param.Packets_QueryObjectInteractableParam:
        _o.Param.Value = this.Param<Gamium.Protocol.Packets.QueryObjectInteractableParam>().HasValue ? this.Param<Gamium.Protocol.Packets.QueryObjectInteractableParam>().Value.UnPack() : null;
        break;
      case Gamium.Protocol.Param.Packets_ActionsParam:
        _o.Param.Value = this.Param<Gamium.Protocol.Packets.ActionsParam>().HasValue ? this.Param<Gamium.Protocol.Packets.ActionsParam>().Value.UnPack() : null;
        break;
      case Gamium.Protocol.Param.Packets_ExecuteRpcParam:
        _o.Param.Value = this.Param<Gamium.Protocol.Packets.ExecuteRpcParam>().HasValue ? this.Param<Gamium.Protocol.Packets.ExecuteRpcParam>().Value.UnPack() : null;
        break;
      case Gamium.Protocol.Param.Packets_InspectObjectOnScreenParam:
        _o.Param.Value = this.Param<Gamium.Protocol.Packets.InspectObjectOnScreenParam>().HasValue ? this.Param<Gamium.Protocol.Packets.InspectObjectOnScreenParam>().Value.UnPack() : null;
        break;
      case Gamium.Protocol.Param.Packets_InspectObjectWithIdParam:
        _o.Param.Value = this.Param<Gamium.Protocol.Packets.InspectObjectWithIdParam>().HasValue ? this.Param<Gamium.Protocol.Packets.InspectObjectWithIdParam>().Value.UnPack() : null;
        break;
      case Gamium.Protocol.Param.Packets_DumpObjectsHierarchyParam:
        _o.Param.Value = this.Param<Gamium.Protocol.Packets.DumpObjectsHierarchyParam>().HasValue ? this.Param<Gamium.Protocol.Packets.DumpObjectsHierarchyParam>().Value.UnPack() : null;
        break;
      case Gamium.Protocol.Param.Packets_ChangeConfigurationParam:
        _o.Param.Value = this.Param<Gamium.Protocol.Packets.ChangeConfigurationParam>().HasValue ? this.Param<Gamium.Protocol.Packets.ChangeConfigurationParam>().Value.UnPack() : null;
        break;
      case Gamium.Protocol.Param.Packets_QueryProfileParam:
        _o.Param.Value = this.Param<Gamium.Protocol.Packets.QueryProfileParam>().HasValue ? this.Param<Gamium.Protocol.Packets.QueryProfileParam>().Value.UnPack() : null;
        break;
    }
  }
  public static Offset<Gamium.Protocol.Request> Pack(FlatBufferBuilder builder, RequestT _o) {
    if (_o == null) return default(Offset<Gamium.Protocol.Request>);
    var _param_type = _o.Param == null ? Gamium.Protocol.Param.NONE : _o.Param.Type;
    var _param = _o.Param == null ? 0 : Gamium.Protocol.ParamUnion.Pack(builder, _o.Param);
    return CreateRequest(
      builder,
      _o.Seq,
      _param_type,
      _param);
  }
}

public class RequestT
{
  public uint Seq { get; set; }
  public Gamium.Protocol.ParamUnion Param { get; set; }

  public RequestT() {
    this.Seq = 0;
    this.Param = null;
  }
  public static RequestT DeserializeFromBinary(byte[] fbBuffer) {
    return Request.GetRootAsRequest(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    Request.FinishRequestBuffer(fbb, Request.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


}
