// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Gamium.Protocol.Packets.Actions
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct SleepParam : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static SleepParam GetRootAsSleepParam(ByteBuffer _bb) { return GetRootAsSleepParam(_bb, new SleepParam()); }
  public static SleepParam GetRootAsSleepParam(ByteBuffer _bb, SleepParam obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SleepParam __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Ms { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<Gamium.Protocol.Packets.Actions.SleepParam> CreateSleepParam(FlatBufferBuilder builder,
      uint ms = 0) {
    builder.StartTable(1);
    SleepParam.AddMs(builder, ms);
    return SleepParam.EndSleepParam(builder);
  }

  public static void StartSleepParam(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddMs(FlatBufferBuilder builder, uint ms) { builder.AddUint(0, ms, 0); }
  public static Offset<Gamium.Protocol.Packets.Actions.SleepParam> EndSleepParam(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Gamium.Protocol.Packets.Actions.SleepParam>(o);
  }
  public SleepParamT UnPack() {
    var _o = new SleepParamT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SleepParamT _o) {
    _o.Ms = this.Ms;
  }
  public static Offset<Gamium.Protocol.Packets.Actions.SleepParam> Pack(FlatBufferBuilder builder, SleepParamT _o) {
    if (_o == null) return default(Offset<Gamium.Protocol.Packets.Actions.SleepParam>);
    return CreateSleepParam(
      builder,
      _o.Ms);
  }
}

public class SleepParamT
{
  public uint Ms { get; set; }

  public SleepParamT() {
    this.Ms = 0;
  }
}


}
