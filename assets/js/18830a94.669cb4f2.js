"use strict";(self.webpackChunkgamium_docs=self.webpackChunkgamium_docs||[]).push([[6805],{84:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var o=n(3289);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),c=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},m=function(e){var t=c(e.components);return o.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},s=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=c(n),s=r,f=u["".concat(p,".").concat(s)]||u[s]||d[s]||i;return n?o.createElement(f,a(a({ref:t},m),{},{components:n})):o.createElement(f,a({ref:t},m))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=s;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:r,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}s.displayName="MDXCreateElement"},4910:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var o=n(4715),r=(n(3289),n(84));const i={sidebar_position:2,title:"Protocol Development"},a="Protocol Development",l={unversionedId:"gamium/contributing/development-guides/protocol-development",id:"gamium/contributing/development-guides/protocol-development",title:"Protocol Development",description:"Update protocol",source:"@site/docs/gamium/contributing/development-guides/protocol-development.mdx",sourceDirName:"gamium/contributing/development-guides",slug:"/gamium/contributing/development-guides/protocol-development",permalink:"/gamium/contributing/development-guides/protocol-development",draft:!1,editUrl:"https://github.com/dogu-team/gamium/tree/main/docs/docs/gamium/contributing/development-guides/protocol-development.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Protocol Development"},sidebar:"docsSidebar",previous:{title:"Coding Style",permalink:"/gamium/contributing/development-guides/coding-style"},next:{title:"Overview",permalink:"/gamium/contributing/development-guides/engine-development/overview"}},p={},c=[{value:"Update protocol",id:"update-protocol",level:2},{value:"Step 1: Define schema",id:"step-1-define-schema",level:3},{value:"Step 2: Export protocol",id:"step-2-export-protocol",level:3},{value:"Step 3: Update Unity meta files",id:"step-3-update-unity-meta-files",level:3},{value:"Step 4: Development Engine and Client",id:"step-4-development-engine-and-client",level:3}],m={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"protocol-development"},"Protocol Development"),(0,r.kt)("h2",{id:"update-protocol"},"Update protocol"),(0,r.kt)("p",null,"The Gamium protocol uses the Flatbuffer to create an interface for communication."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Flatbuffer is a binary serialization format that allows you to create a schema for your data and then compile it into a binary format that can be used in many different programming languages.",(0,r.kt)("br",{parentName:"p"}),"\n","syntax is similar to JSON, but it is much more efficient in terms of size and speed.")),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"If you change the Gamium protocol, all engine and client interfaces must be checked.")),(0,r.kt)("h3",{id:"step-1-define-schema"},"Step 1: Define schema"),(0,r.kt)("p",null,"The schema files is located in the ",(0,r.kt)("inlineCode",{parentName:"p"},"protocol/fbs")," folder.",(0,r.kt)("br",{parentName:"p"}),"\n","Please refer to ",(0,r.kt)("a",{parentName:"p",href:"https://flatbuffers.dev/flatbuffers_guide_writing_schema.html"},(0,r.kt)("strong",{parentName:"a"},"Flatbuffer official schema document"))," for the grammar of flatbuffer."),(0,r.kt)("h3",{id:"step-2-export-protocol"},"Step 2: Export protocol"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cd protocol\nyarn export\n")),(0,r.kt)("h3",{id:"step-3-update-unity-meta-files"},"Step 3: Update Unity meta files"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cd utils/typescript/unity-meta-gen\nyarn export\n")),(0,r.kt)("h3",{id:"step-4-development-engine-and-client"},"Step 4: Development Engine and Client"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"engine-development/overview"},"Engine Development")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"client-development/overview"},"Client Development"))))}d.isMDXComponent=!0}}]);