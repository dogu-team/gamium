// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Gamium.Protocol.Packets
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct QueryObjectInteractableResult : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static QueryObjectInteractableResult GetRootAsQueryObjectInteractableResult(ByteBuffer _bb) { return GetRootAsQueryObjectInteractableResult(_bb, new QueryObjectInteractableResult()); }
  public static QueryObjectInteractableResult GetRootAsQueryObjectInteractableResult(ByteBuffer _bb, QueryObjectInteractableResult obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public QueryObjectInteractableResult __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool IsInteractable { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<Gamium.Protocol.Packets.QueryObjectInteractableResult> CreateQueryObjectInteractableResult(FlatBufferBuilder builder,
      bool is_interactable = false) {
    builder.StartTable(1);
    QueryObjectInteractableResult.AddIsInteractable(builder, is_interactable);
    return QueryObjectInteractableResult.EndQueryObjectInteractableResult(builder);
  }

  public static void StartQueryObjectInteractableResult(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddIsInteractable(FlatBufferBuilder builder, bool isInteractable) { builder.AddBool(0, isInteractable, false); }
  public static Offset<Gamium.Protocol.Packets.QueryObjectInteractableResult> EndQueryObjectInteractableResult(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Gamium.Protocol.Packets.QueryObjectInteractableResult>(o);
  }
  public QueryObjectInteractableResultT UnPack() {
    var _o = new QueryObjectInteractableResultT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(QueryObjectInteractableResultT _o) {
    _o.IsInteractable = this.IsInteractable;
  }
  public static Offset<Gamium.Protocol.Packets.QueryObjectInteractableResult> Pack(FlatBufferBuilder builder, QueryObjectInteractableResultT _o) {
    if (_o == null) return default(Offset<Gamium.Protocol.Packets.QueryObjectInteractableResult>);
    return CreateQueryObjectInteractableResult(
      builder,
      _o.IsInteractable);
  }
}

public class QueryObjectInteractableResultT
{
  public bool IsInteractable { get; set; }

  public QueryObjectInteractableResultT() {
    this.IsInteractable = false;
  }
}


}
