// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { ActionsParam, ActionsParamT } from '../../gamium/protocol/packets/actions-param.js';
import { ChangeConfigurationParam, ChangeConfigurationParamT } from '../../gamium/protocol/packets/change-configuration-param.js';
import { DumpObjectsHierarchyParam, DumpObjectsHierarchyParamT } from '../../gamium/protocol/packets/dump-objects-hierarchy-param.js';
import { ExecuteRpcParam, ExecuteRpcParamT } from '../../gamium/protocol/packets/execute-rpc-param.js';
import { FindObjectsParam, FindObjectsParamT } from '../../gamium/protocol/packets/find-objects-param.js';
import { HelloParam, HelloParamT } from '../../gamium/protocol/packets/hello-param.js';
import { InspectObjectOnScreenParam, InspectObjectOnScreenParamT } from '../../gamium/protocol/packets/inspect-object-on-screen-param.js';
import { InspectObjectWithIdParam, InspectObjectWithIdParamT } from '../../gamium/protocol/packets/inspect-object-with-id-param.js';
import { QueryObjectInteractableParam, QueryObjectInteractableParamT } from '../../gamium/protocol/packets/query-object-interactable-param.js';
import { QueryProfileParam, QueryProfileParamT } from '../../gamium/protocol/packets/query-profile-param.js';
import { QueryScreenParam, QueryScreenParamT } from '../../gamium/protocol/packets/query-screen-param.js';
import { Param, unionToParam, unionListToParam } from '../../gamium/protocol/param.js';

export class Request implements flatbuffers.IUnpackableObject<RequestT> {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): Request {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsRequest(bb: flatbuffers.ByteBuffer, obj?: Request): Request {
    return (obj || new Request()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static getSizePrefixedRootAsRequest(bb: flatbuffers.ByteBuffer, obj?: Request): Request {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new Request()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  seq(): number {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
  }

  paramType(): Param {
    const offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.readUint8(this.bb_pos + offset) : Param.NONE;
  }

  param<T extends flatbuffers.Table>(obj: any): any | null {
    const offset = this.bb!.__offset(this.bb_pos, 8);
    return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
  }

  static startRequest(builder: flatbuffers.Builder) {
    builder.startObject(3);
  }

  static addSeq(builder: flatbuffers.Builder, seq: number) {
    builder.addFieldInt32(0, seq, 0);
  }

  static addParamType(builder: flatbuffers.Builder, paramType: Param) {
    builder.addFieldInt8(1, paramType, Param.NONE);
  }

  static addParam(builder: flatbuffers.Builder, paramOffset: flatbuffers.Offset) {
    builder.addFieldOffset(2, paramOffset, 0);
  }

  static endRequest(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static finishRequestBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {
    builder.finish(offset);
  }

  static finishSizePrefixedRequestBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {
    builder.finish(offset, undefined, true);
  }

  static createRequest(builder: flatbuffers.Builder, seq: number, paramType: Param, paramOffset: flatbuffers.Offset): flatbuffers.Offset {
    Request.startRequest(builder);
    Request.addSeq(builder, seq);
    Request.addParamType(builder, paramType);
    Request.addParam(builder, paramOffset);
    return Request.endRequest(builder);
  }

  unpack(): RequestT {
    return new RequestT(
      this.seq(),
      this.paramType(),
      (() => {
        const temp = unionToParam(this.paramType(), this.param.bind(this));
        if (temp === null) {
          return null;
        }
        return temp.unpack();
      })(),
    );
  }

  unpackTo(_o: RequestT): void {
    _o.seq = this.seq();
    _o.paramType = this.paramType();
    _o.param = (() => {
      const temp = unionToParam(this.paramType(), this.param.bind(this));
      if (temp === null) {
        return null;
      }
      return temp.unpack();
    })();
  }
}

export class RequestT implements flatbuffers.IGeneratedObject {
  constructor(
    public seq: number = 0,
    public paramType: Param = Param.NONE,
    public param:
      | ActionsParamT
      | ChangeConfigurationParamT
      | DumpObjectsHierarchyParamT
      | ExecuteRpcParamT
      | FindObjectsParamT
      | HelloParamT
      | InspectObjectOnScreenParamT
      | InspectObjectWithIdParamT
      | QueryObjectInteractableParamT
      | QueryProfileParamT
      | QueryScreenParamT
      | null = null,
  ) {}

  pack(builder: flatbuffers.Builder): flatbuffers.Offset {
    const param = builder.createObjectOffset(this.param);

    return Request.createRequest(builder, this.seq, this.paramType, param);
  }
}
