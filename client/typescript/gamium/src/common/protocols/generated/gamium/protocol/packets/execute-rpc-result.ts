// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class ExecuteRpcResult implements flatbuffers.IUnpackableObject<ExecuteRpcResultT> {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): ExecuteRpcResult {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsExecuteRpcResult(bb: flatbuffers.ByteBuffer, obj?: ExecuteRpcResult): ExecuteRpcResult {
    return (obj || new ExecuteRpcResult()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static getSizePrefixedRootAsExecuteRpcResult(bb: flatbuffers.ByteBuffer, obj?: ExecuteRpcResult): ExecuteRpcResult {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new ExecuteRpcResult()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  document(): string | null;
  document(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
  document(optionalEncoding?: any): string | Uint8Array | null {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
  }

  static startExecuteRpcResult(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  static addDocument(builder: flatbuffers.Builder, documentOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, documentOffset, 0);
  }

  static endExecuteRpcResult(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static createExecuteRpcResult(builder: flatbuffers.Builder, documentOffset: flatbuffers.Offset): flatbuffers.Offset {
    ExecuteRpcResult.startExecuteRpcResult(builder);
    ExecuteRpcResult.addDocument(builder, documentOffset);
    return ExecuteRpcResult.endExecuteRpcResult(builder);
  }

  unpack(): ExecuteRpcResultT {
    return new ExecuteRpcResultT(this.document());
  }

  unpackTo(_o: ExecuteRpcResultT): void {
    _o.document = this.document();
  }
}

export class ExecuteRpcResultT implements flatbuffers.IGeneratedObject {
  constructor(public document: string | Uint8Array | null = null) {}

  pack(builder: flatbuffers.Builder): flatbuffers.Offset {
    const document = this.document !== null ? builder.createString(this.document!) : 0;

    return ExecuteRpcResult.createExecuteRpcResult(builder, document);
  }
}
