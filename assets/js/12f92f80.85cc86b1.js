"use strict";(self.webpackChunkgamium_docs=self.webpackChunkgamium_docs||[]).push([[2241],{84:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(3289);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=i,h=m["".concat(s,".").concat(d)]||m[d]||p[d]||r;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:i,o[1]=l;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5503:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var a=n(4715),i=(n(3289),n(84));const r={sidebar_position:10,title:"Pull Requests",toc_max_heading_level:4},o="Pull Requests",l={unversionedId:"docs/contributing/pull-requests",id:"docs/contributing/pull-requests",title:"Pull Requests",description:"Setting up your local environment",source:"@site/docs/docs/contributing/pull-requests.mdx",sourceDirName:"docs/contributing",slug:"/docs/contributing/pull-requests",permalink:"/docs/contributing/pull-requests",draft:!1,editUrl:"https://github.com/dogu-team/gamium/tree/main/docs/docs/docs/contributing/pull-requests.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,title:"Pull Requests",toc_max_heading_level:4},sidebar:"docsSidebar",previous:{title:"Issues In Gamium",permalink:"/docs/contributing/issues"}},s={},u=[{value:"Setting up your local environment",id:"setting-up-your-local-environment",level:3},{value:"Fork",id:"fork",level:4},{value:"Build",id:"build",level:4},{value:"Engine",id:"engine",level:5},{value:"Client",id:"client",level:5},{value:"Branch",id:"branch",level:4},{value:"Making Changes",id:"making-changes",level:3},{value:"Code",id:"code",level:4},{value:"Commit",id:"commit",level:4},{value:"Commit message guidelines",id:"commit-message-guidelines",level:5},{value:"Breaking Changes",id:"breaking-changes",level:5},{value:"Rebase",id:"rebase",level:4},{value:"Test",id:"test",level:3},{value:"Push",id:"push",level:3},{value:"Opening the Pull Request",id:"opening-the-pull-request",level:4},{value:"Discuss and Update",id:"discuss-and-update",level:4},{value:"Approval and Request Changes Workflow",id:"approval-and-request-changes-workflow",level:3},{value:"Landing",id:"landing",level:4},{value:"Continuous Integration Testing",id:"continuous-integration-testing",level:3}],c={toc:u},m="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"pull-requests"},"Pull Requests"),(0,i.kt)("h3",{id:"setting-up-your-local-environment"},"Setting up your local environment"),(0,i.kt)("h4",{id:"fork"},"Fork"),(0,i.kt)("p",null,"Fork the project on GitHub and clone your fork locally."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ git clone https://github.com/dogu-team/gamium.git\n$ cd gamium\n$ git remote add upstream https://github.com/dogu-team/gamium.git\n$ git fetch upstream\n")),(0,i.kt)("h4",{id:"build"},"Build"),(0,i.kt)("p",null,"Build steps and dependencies differ slightly depending on your game engine. See these detailed guides on building Gamium locally:"),(0,i.kt)("h5",{id:"engine"},"Engine"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./engine-development/unity"},(0,i.kt)("strong",{parentName:"a"},"Gamium Engine Unity SDK")))),(0,i.kt)("h5",{id:"client"},"Client"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./client-development/typescript"},(0,i.kt)("strong",{parentName:"a"},"Gamium Client for TypeScript")))),(0,i.kt)("p",null,"Once you've built the project locally, you're ready to start making changes!"),(0,i.kt)("h4",{id:"branch"},"Branch"),(0,i.kt)("p",null,"To keep your development environment organized, create local branches to hold your work. These should be branched directly off of the main branch."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"git checkout -b my-branch -t upstream/main\n")),(0,i.kt)("h3",{id:"making-changes"},"Making Changes"),(0,i.kt)("h4",{id:"code"},"Code"),(0,i.kt)("p",null,"Most pull requests opened against the dogu-team/gamium repository include changes to either the protocol in the protocol/ folder, the client in the client/ folder, the engine in the engine/ folder, the documentation in docs/ folder."),(0,i.kt)("p",null,"Please be sure to run ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn run newbie")," from the root of the project to run the husky pre-commit hook that will run the linter and prettier on your code."),(0,i.kt)("p",null,"See coding style for more information about best practice when modifying code in different parts of the project."),(0,i.kt)("h4",{id:"commit"},"Commit"),(0,i.kt)("p",null,"It is recommended to keep your changes grouped logically within individual commits. Many contributors find it easier to review changes that are split across multiple commits. There is no limit to the number of commits in a pull request."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ git add my/changed/files\n$ git commit\n")),(0,i.kt)("p",null,"Note that multiple commits get squashed when they are landed."),(0,i.kt)("h5",{id:"commit-message-guidelines"},"Commit message guidelines"),(0,i.kt)("p",null,"A good commit message should describe what changed and why. The Gamium project uses ",(0,i.kt)("a",{parentName:"p",href:"https://conventionalcommits.org/"},(0,i.kt)("strong",{parentName:"a"},"semantic commit messages"))," to streamline the release process."),(0,i.kt)("p",null,"Before a pull request can be merged, it ",(0,i.kt)("strong",{parentName:"p"},"must")," have a pull request title with a semantic prefix."),(0,i.kt)("p",null,"Examples of commit messages with semantic prefixes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"fix: NullReferenceException when using ui.click() on a non existing element")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"feat: add ui.click() method")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"docs: gamium.ui() is now available"))),(0,i.kt)("p",null,"Common prefixes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"fix: A bug fix"),(0,i.kt)("li",{parentName:"ul"},"feat: A new feature"),(0,i.kt)("li",{parentName:"ul"},"docs: Documentation changes"),(0,i.kt)("li",{parentName:"ul"},"test: Adding missing tests or correcting existing tests"),(0,i.kt)("li",{parentName:"ul"},"build: Changes that affect the build system"),(0,i.kt)("li",{parentName:"ul"},"ci: Changes to our CI configuration files and scripts"),(0,i.kt)("li",{parentName:"ul"},"perf: A code change that improves performance"),(0,i.kt)("li",{parentName:"ul"},"refactor: A code change that neither fixes a bug nor adds a feature"),(0,i.kt)("li",{parentName:"ul"},"style: Changes that do not affect the meaning of the code (linting)")),(0,i.kt)("p",null,"Other things to keep in mind when writing a commit message:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The first line should:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"contain a short description of the change (preferably 50 characters or less, and no more than 72 characters)"),(0,i.kt)("li",{parentName:"ul"},"be entirely in lowercase with the exception of proper nouns, acronyms, and the words that refer to code, like function/variable names"))),(0,i.kt)("li",{parentName:"ol"},"Keep the second line blank."),(0,i.kt)("li",{parentName:"ol"},"Wrap all other lines at 72 columns.")),(0,i.kt)("h5",{id:"breaking-changes"},"Breaking Changes"),(0,i.kt)("p",null,"A commit that has the text BREAKING CHANGE: at the beginning of its optional body or footer section introduces a breaking API change (correlating with Major in semantic versioning). A breaking change can be part of commits of any type. e.g., a fix:, feat: & chore: types would all be valid, in addition to any other type."),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"https://conventionalcommits.org/"},(0,i.kt)("strong",{parentName:"a"},"conventionalcommits.org"))," for more details."),(0,i.kt)("h4",{id:"rebase"},"Rebase"),(0,i.kt)("p",null,"Once you have committed your changes, it is a good idea to use ",(0,i.kt)("inlineCode",{parentName:"p"},"git rebase")," (not ",(0,i.kt)("inlineCode",{parentName:"p"},"git merge1"),") to synchronize your work with the main repository."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ git fetch upstream\n$ git rebase upstream/main\n")),(0,i.kt)("p",null,"This ensures that your working branch has the latest changes from ",(0,i.kt)("inlineCode",{parentName:"p"},"dogu-team/gamium")," main."),(0,i.kt)("h3",{id:"test"},"Test"),(0,i.kt)("p",null,"Bug fixes and features should always come with tests. A ",(0,i.kt)("a",{parentName:"p",href:"./testing"},(0,i.kt)("strong",{parentName:"a"},"testing guide"))," has been provided to make the process easier. Looking at other tests to see how they should be structured can also help."),(0,i.kt)("p",null,"Before submitting your changes in a pull request, always run the full test suite. To run the tests:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"yarn run test\n")),(0,i.kt)("p",null,"Make sure the linter does not report any issues and that all tests pass. Please do not submit patches that fail either check."),(0,i.kt)("h3",{id:"push"},"Push"),(0,i.kt)("p",null,"Once your commits are ready to go -- with passing tests and linting -- begin the process of opening a pull request by pushing your working branch to your fork on GitHub."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ git push origin my-branch\n")),(0,i.kt)("h4",{id:"opening-the-pull-request"},"Opening the Pull Request"),(0,i.kt)("p",null,"From within GitHub, opening a new pull request will present you with a template that should be filled out. It can be found ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/dogu-team/gamium/blob/main/.github/PULL_REQUEST_TEMPLATE.md"},(0,i.kt)("strong",{parentName:"a"},"here")),"."),(0,i.kt)("p",null,"If you do not adequately complete this template, your PR may be delayed in being merged as maintainers seek more information or clarify ambiguities."),(0,i.kt)("h4",{id:"discuss-and-update"},"Discuss and Update"),(0,i.kt)("p",null,"You will probably get feedback or requests for changes to your pull request. This is a big part of the submission process so don't be discouraged! Some contributors may sign off on the pull request right away. Others may have detailed comments or feedback. This is a necessary part of the process in order to evaluate whether the changes are correct and necessary."),(0,i.kt)("p",null,"To make changes to an existing pull request, make the changes to your local branch, add a new commit with those changes, and push those to your fork. GitHub will automatically update the pull request."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ git add my/changed/files\n$ git commit\n$ git push origin my-branch\n")),(0,i.kt)("p",null,"There are a number of more advanced mechanisms for managing commits using ",(0,i.kt)("inlineCode",{parentName:"p"},"git rebase")," that can be used, but are beyond the scope of this guide."),(0,i.kt)("p",null,"Feel free to post a comment in the pull request to ping reviewers if you are awaiting an answer on something. If you encounter words or acronyms that seem unfamiliar, refer to this ",(0,i.kt)("a",{parentName:"p",href:"https://chromium.googlesource.com/chromiumos/docs/+/HEAD/glossary.md"},(0,i.kt)("strong",{parentName:"a"},"glossary")),"."),(0,i.kt)("h3",{id:"approval-and-request-changes-workflow"},"Approval and Request Changes Workflow"),(0,i.kt)("p",null,"All pull requests require approval from a ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/dogu-team/gamium/blob/main/.github/CODEOWNERS"},(0,i.kt)("strong",{parentName:"a"},"Code Owner"))," of the area you modified in order to land. Whenever a maintainer reviews a pull request they may request changes. These may be small, such as fixing a typo, or may involve substantive changes. Such requests are intended to be helpful, but at times may come across as abrupt or unhelpful, especially if they do not include concrete suggestions on how to change them."),(0,i.kt)("p",null,"Try not to be discouraged. If you feel that a review is unfair, say so or seek the input of another project contributor. Often such comments are the result of a reviewer having taken insufficient time to review and are not ill-intended. Such difficulties can often be resolved with a bit of patience. That said, reviewers should be expected to provide helpful feedback."),(0,i.kt)("h4",{id:"landing"},"Landing"),(0,i.kt)("p",null,"In order to land, a pull request needs to be reviewed and approved by at least one Gamium Code Owner and pass CI. After that, if there are no objections from other contributors, the pull request can be merged."),(0,i.kt)("p",null,"Congratulations and thanks for your contribution!"),(0,i.kt)("h3",{id:"continuous-integration-testing"},"Continuous Integration Testing"),(0,i.kt)("p",null,"Every pull request is tested on the Continuous Integration (CI) system to confirm that it works on Gamium's supported platforms."),(0,i.kt)("p",null,'Ideally, the pull request will pass ("be green") on all of CI\'s platforms. This means that all tests pass and there are no linting errors. However, it is not uncommon for the CI infrastructure itself to fail on specific platforms or for so-called "flaky" tests to fail ("be red"). Each CI failure must be manually inspected to determine the cause.'),(0,i.kt)("p",null,"CI starts automatically when you open a pull request, but only core maintainers can restart a CI run. If you believe CI is giving a false negative, ask a maintainer to restart the tests."))}p.isMDXComponent=!0}}]);