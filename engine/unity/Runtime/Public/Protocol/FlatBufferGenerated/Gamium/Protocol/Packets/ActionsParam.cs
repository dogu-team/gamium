// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Gamium.Protocol.Packets
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ActionsParam : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static ActionsParam GetRootAsActionsParam(ByteBuffer _bb) { return GetRootAsActionsParam(_bb, new ActionsParam()); }
  public static ActionsParam GetRootAsActionsParam(ByteBuffer _bb, ActionsParam obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ActionsParam __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Actions { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetActionsBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetActionsBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetActionsArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<Gamium.Protocol.Packets.ActionsParam> CreateActionsParam(FlatBufferBuilder builder,
      StringOffset actionsOffset = default(StringOffset)) {
    builder.StartTable(1);
    ActionsParam.AddActions(builder, actionsOffset);
    return ActionsParam.EndActionsParam(builder);
  }

  public static void StartActionsParam(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddActions(FlatBufferBuilder builder, StringOffset actionsOffset) { builder.AddOffset(0, actionsOffset.Value, 0); }
  public static Offset<Gamium.Protocol.Packets.ActionsParam> EndActionsParam(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Gamium.Protocol.Packets.ActionsParam>(o);
  }
  public ActionsParamT UnPack() {
    var _o = new ActionsParamT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ActionsParamT _o) {
    _o.Actions = this.Actions;
  }
  public static Offset<Gamium.Protocol.Packets.ActionsParam> Pack(FlatBufferBuilder builder, ActionsParamT _o) {
    if (_o == null) return default(Offset<Gamium.Protocol.Packets.ActionsParam>);
    var _actions = _o.Actions == null ? default(StringOffset) : builder.CreateString(_o.Actions);
    return CreateActionsParam(
      builder,
      _actions);
  }
}

public class ActionsParamT
{
  public string Actions { get; set; }

  public ActionsParamT() {
    this.Actions = null;
  }
}


}
