// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Gamium.Protocol.Packets
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ChangeConfigurationParam : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static ChangeConfigurationParam GetRootAsChangeConfigurationParam(ByteBuffer _bb) { return GetRootAsChangeConfigurationParam(_bb, new ChangeConfigurationParam()); }
  public static ChangeConfigurationParam GetRootAsChangeConfigurationParam(ByteBuffer _bb, ChangeConfigurationParam obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ChangeConfigurationParam __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Gamium.Protocol.Types.Configuration? Config { get { int o = __p.__offset(4); return o != 0 ? (Gamium.Protocol.Types.Configuration?)(new Gamium.Protocol.Types.Configuration()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<Gamium.Protocol.Packets.ChangeConfigurationParam> CreateChangeConfigurationParam(FlatBufferBuilder builder,
      Offset<Gamium.Protocol.Types.Configuration> configOffset = default(Offset<Gamium.Protocol.Types.Configuration>)) {
    builder.StartTable(1);
    ChangeConfigurationParam.AddConfig(builder, configOffset);
    return ChangeConfigurationParam.EndChangeConfigurationParam(builder);
  }

  public static void StartChangeConfigurationParam(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddConfig(FlatBufferBuilder builder, Offset<Gamium.Protocol.Types.Configuration> configOffset) { builder.AddOffset(0, configOffset.Value, 0); }
  public static Offset<Gamium.Protocol.Packets.ChangeConfigurationParam> EndChangeConfigurationParam(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Gamium.Protocol.Packets.ChangeConfigurationParam>(o);
  }
  public ChangeConfigurationParamT UnPack() {
    var _o = new ChangeConfigurationParamT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ChangeConfigurationParamT _o) {
    _o.Config = this.Config.HasValue ? this.Config.Value.UnPack() : null;
  }
  public static Offset<Gamium.Protocol.Packets.ChangeConfigurationParam> Pack(FlatBufferBuilder builder, ChangeConfigurationParamT _o) {
    if (_o == null) return default(Offset<Gamium.Protocol.Packets.ChangeConfigurationParam>);
    var _config = _o.Config == null ? default(Offset<Gamium.Protocol.Types.Configuration>) : Gamium.Protocol.Types.Configuration.Pack(builder, _o.Config);
    return CreateChangeConfigurationParam(
      builder,
      _config);
  }
}

public class ChangeConfigurationParamT
{
  public Gamium.Protocol.Types.ConfigurationT Config { get; set; }

  public ChangeConfigurationParamT() {
    this.Config = null;
  }
}


}
