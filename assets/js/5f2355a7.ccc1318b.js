"use strict";(self.webpackChunkgamium_docs=self.webpackChunkgamium_docs||[]).push([[3976],{84:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var r=n(3289);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,u=d["".concat(s,".").concat(m)]||d[m]||h[m]||a;return n?r.createElement(u,i(i({ref:t},c),{},{components:n})):r.createElement(u,i({ref:t},c))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5614:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(4715),o=(n(3289),n(84));const a={title:"MovePlayerOptions",toc_max_heading_level:4},i="MovePlayerOptions <s generated />",l={unversionedId:"api/client/python/classes/move-player-options",id:"api/client/python/classes/move-player-options",title:"MovePlayerOptions",description:"Properties",source:"@site/docs/api/client/python/classes/move-player-options.mdx",sourceDirName:"api/client/python/classes",slug:"/api/client/python/classes/move-player-options",permalink:"/api/client/python/classes/move-player-options",draft:!1,editUrl:"https://github.com/dogu-team/gamium/tree/main/docs/docs/api/client/python/classes/move-player-options.mdx",tags:[],version:"current",frontMatter:{title:"MovePlayerOptions",toc_max_heading_level:4},sidebar:"apiSidebar",previous:{title:"MovePlayerBy",permalink:"/api/client/python/classes/move-player-by"},next:{title:"ObjectInfo",permalink:"/api/client/python/classes/object-info"}},s={},p=[{value:"Properties <s generated />",id:"properties-",level:2},{value:"by <code>int</code> <s generated />",id:"by-int-",level:4},{value:"epsilon <code>float</code> <s generated />",id:"epsilon-float-",level:4},{value:"check_height <code>bool</code> <s generated />",id:"check_height-bool-",level:4}],c={toc:p},d="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"moveplayeroptions-"},"MovePlayerOptions ",(0,o.kt)("s",{generated:!0})),(0,o.kt)("hr",{class:"solid"}),"  ",(0,o.kt)("s",{generated:!0}),(0,o.kt)("h2",{id:"properties-"},"Properties ",(0,o.kt)("s",{generated:!0})),(0,o.kt)("h4",{id:"by-int-"},"by ",(0,o.kt)("a",{parentName:"h4",href:"https://docs.python.org/3.9/library/stdtypes.html?highlight=int#numeric-types-int-float-complex"},(0,o.kt)("inlineCode",{parentName:"a"},"int"))," ",(0,o.kt)("s",{generated:!0})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Indicates the method to use to move Player.")),(0,o.kt)("hr",{class:"solid"}),"  ",(0,o.kt)("s",{generated:!0}),(0,o.kt)("h4",{id:"epsilon-float-"},"epsilon ",(0,o.kt)("a",{parentName:"h4",href:"https://docs.python.org/3.9/library/stdtypes.html?highlight=int#numeric-types-int-float-complex"},(0,o.kt)("inlineCode",{parentName:"a"},"float"))," ",(0,o.kt)("s",{generated:!0})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The distance to determine the distance from the destination to the destination.If the distance from the Player and destination is smaller than this value.")),(0,o.kt)("hr",{class:"solid"}),"  ",(0,o.kt)("s",{generated:!0}),(0,o.kt)("h4",{id:"check_height-bool-"},"check_height ",(0,o.kt)("a",{parentName:"h4",href:"https://docs.python.org/3.9/library/stdtypes.html?highlight=int#boolean-values"},(0,o.kt)("inlineCode",{parentName:"a"},"bool"))," ",(0,o.kt)("s",{generated:!0})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Indicates whether a height check is performed when comparing the distance to the destinationbig")),(0,o.kt)("hr",{class:"solid"}),"  ",(0,o.kt)("s",{generated:!0}))}h.isMDXComponent=!0}}]);