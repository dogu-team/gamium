// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Gamium.Protocol.Packets
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct HelloParam : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static HelloParam GetRootAsHelloParam(ByteBuffer _bb) { return GetRootAsHelloParam(_bb, new HelloParam()); }
  public static HelloParam GetRootAsHelloParam(ByteBuffer _bb, HelloParam obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public HelloParam __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Version { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVersionBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetVersionBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetVersionArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<Gamium.Protocol.Packets.HelloParam> CreateHelloParam(FlatBufferBuilder builder,
      StringOffset versionOffset = default(StringOffset)) {
    builder.StartTable(1);
    HelloParam.AddVersion(builder, versionOffset);
    return HelloParam.EndHelloParam(builder);
  }

  public static void StartHelloParam(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddVersion(FlatBufferBuilder builder, StringOffset versionOffset) { builder.AddOffset(0, versionOffset.Value, 0); }
  public static Offset<Gamium.Protocol.Packets.HelloParam> EndHelloParam(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Gamium.Protocol.Packets.HelloParam>(o);
  }
  public HelloParamT UnPack() {
    var _o = new HelloParamT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(HelloParamT _o) {
    _o.Version = this.Version;
  }
  public static Offset<Gamium.Protocol.Packets.HelloParam> Pack(FlatBufferBuilder builder, HelloParamT _o) {
    if (_o == null) return default(Offset<Gamium.Protocol.Packets.HelloParam>);
    var _version = _o.Version == null ? default(StringOffset) : builder.CreateString(_o.Version);
    return CreateHelloParam(
      builder,
      _version);
  }
}

public class HelloParamT
{
  public string Version { get; set; }

  public HelloParamT() {
    this.Version = null;
  }
}


}
