// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { ObjectLocator, ObjectLocatorT } from '../../../gamium/protocol/types/object-locator.js';

export class FindObjectsParam implements flatbuffers.IUnpackableObject<FindObjectsParamT> {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): FindObjectsParam {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsFindObjectsParam(bb: flatbuffers.ByteBuffer, obj?: FindObjectsParam): FindObjectsParam {
    return (obj || new FindObjectsParam()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static getSizePrefixedRootAsFindObjectsParam(bb: flatbuffers.ByteBuffer, obj?: FindObjectsParam): FindObjectsParam {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new FindObjectsParam()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  locator(obj?: ObjectLocator): ObjectLocator | null {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? (obj || new ObjectLocator()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
  }

  static startFindObjectsParam(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  static addLocator(builder: flatbuffers.Builder, locatorOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, locatorOffset, 0);
  }

  static endFindObjectsParam(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static createFindObjectsParam(builder: flatbuffers.Builder, locatorOffset: flatbuffers.Offset): flatbuffers.Offset {
    FindObjectsParam.startFindObjectsParam(builder);
    FindObjectsParam.addLocator(builder, locatorOffset);
    return FindObjectsParam.endFindObjectsParam(builder);
  }

  unpack(): FindObjectsParamT {
    return new FindObjectsParamT(this.locator() !== null ? this.locator()!.unpack() : null);
  }

  unpackTo(_o: FindObjectsParamT): void {
    _o.locator = this.locator() !== null ? this.locator()!.unpack() : null;
  }
}

export class FindObjectsParamT implements flatbuffers.IGeneratedObject {
  constructor(public locator: ObjectLocatorT | null = null) {}

  pack(builder: flatbuffers.Builder): flatbuffers.Offset {
    const locator = this.locator !== null ? this.locator!.pack(builder) : 0;

    return FindObjectsParam.createFindObjectsParam(builder, locator);
  }
}
