// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { ActionParam, unionToActionParam, unionListToActionParam } from '../../../gamium/protocol/packets/action-param.js';
import { AppQuitParam, AppQuitParamT } from '../../../gamium/protocol/packets/actions/app-quit-param.js';
import { InputKeyParam, InputKeyParamT } from '../../../gamium/protocol/packets/actions/input-key-param.js';
import { InputMouseParam, InputMouseParamT } from '../../../gamium/protocol/packets/actions/input-mouse-param.js';
import { InputSetTextParam, InputSetTextParamT } from '../../../gamium/protocol/packets/actions/input-set-text-param.js';
import { MovePlayerParam, MovePlayerParamT } from '../../../gamium/protocol/packets/actions/move-player-param.js';
import { SleepParam, SleepParamT } from '../../../gamium/protocol/packets/actions/sleep-param.js';

export class ActionParamSingle implements flatbuffers.IUnpackableObject<ActionParamSingleT> {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): ActionParamSingle {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsActionParamSingle(bb: flatbuffers.ByteBuffer, obj?: ActionParamSingle): ActionParamSingle {
    return (obj || new ActionParamSingle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static getSizePrefixedRootAsActionParamSingle(bb: flatbuffers.ByteBuffer, obj?: ActionParamSingle): ActionParamSingle {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new ActionParamSingle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  actionType(): ActionParam {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readUint8(this.bb_pos + offset) : ActionParam.NONE;
  }

  action<T extends flatbuffers.Table>(obj: any): any | null {
    const offset = this.bb!.__offset(this.bb_pos, 6);
    return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
  }

  static startActionParamSingle(builder: flatbuffers.Builder) {
    builder.startObject(2);
  }

  static addActionType(builder: flatbuffers.Builder, actionType: ActionParam) {
    builder.addFieldInt8(0, actionType, ActionParam.NONE);
  }

  static addAction(builder: flatbuffers.Builder, actionOffset: flatbuffers.Offset) {
    builder.addFieldOffset(1, actionOffset, 0);
  }

  static endActionParamSingle(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static createActionParamSingle(builder: flatbuffers.Builder, actionType: ActionParam, actionOffset: flatbuffers.Offset): flatbuffers.Offset {
    ActionParamSingle.startActionParamSingle(builder);
    ActionParamSingle.addActionType(builder, actionType);
    ActionParamSingle.addAction(builder, actionOffset);
    return ActionParamSingle.endActionParamSingle(builder);
  }

  unpack(): ActionParamSingleT {
    return new ActionParamSingleT(
      this.actionType(),
      (() => {
        const temp = unionToActionParam(this.actionType(), this.action.bind(this));
        if (temp === null) {
          return null;
        }
        return temp.unpack();
      })(),
    );
  }

  unpackTo(_o: ActionParamSingleT): void {
    _o.actionType = this.actionType();
    _o.action = (() => {
      const temp = unionToActionParam(this.actionType(), this.action.bind(this));
      if (temp === null) {
        return null;
      }
      return temp.unpack();
    })();
  }
}

export class ActionParamSingleT implements flatbuffers.IGeneratedObject {
  constructor(
    public actionType: ActionParam = ActionParam.NONE,
    public action: AppQuitParamT | InputKeyParamT | InputMouseParamT | InputSetTextParamT | MovePlayerParamT | SleepParamT | null = null,
  ) {}

  pack(builder: flatbuffers.Builder): flatbuffers.Offset {
    const action = builder.createObjectOffset(this.action);

    return ActionParamSingle.createActionParamSingle(builder, this.actionType, action);
  }
}
