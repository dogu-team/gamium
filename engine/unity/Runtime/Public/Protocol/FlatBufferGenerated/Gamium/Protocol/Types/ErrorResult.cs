// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Gamium.Protocol.Types
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ErrorResult : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static ErrorResult GetRootAsErrorResult(ByteBuffer _bb) { return GetRootAsErrorResult(_bb, new ErrorResult()); }
  public static ErrorResult GetRootAsErrorResult(ByteBuffer _bb, ErrorResult obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ErrorResult __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Gamium.Protocol.Types.ErrorCode Code { get { int o = __p.__offset(4); return o != 0 ? (Gamium.Protocol.Types.ErrorCode)__p.bb.GetInt(o + __p.bb_pos) : Gamium.Protocol.Types.ErrorCode.None; } }
  public string Reason { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetReasonBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetReasonBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetReasonArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<Gamium.Protocol.Types.ErrorResult> CreateErrorResult(FlatBufferBuilder builder,
      Gamium.Protocol.Types.ErrorCode code = Gamium.Protocol.Types.ErrorCode.None,
      StringOffset reasonOffset = default(StringOffset)) {
    builder.StartTable(2);
    ErrorResult.AddReason(builder, reasonOffset);
    ErrorResult.AddCode(builder, code);
    return ErrorResult.EndErrorResult(builder);
  }

  public static void StartErrorResult(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddCode(FlatBufferBuilder builder, Gamium.Protocol.Types.ErrorCode code) { builder.AddInt(0, (int)code, 0); }
  public static void AddReason(FlatBufferBuilder builder, StringOffset reasonOffset) { builder.AddOffset(1, reasonOffset.Value, 0); }
  public static Offset<Gamium.Protocol.Types.ErrorResult> EndErrorResult(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Gamium.Protocol.Types.ErrorResult>(o);
  }
  public ErrorResultT UnPack() {
    var _o = new ErrorResultT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ErrorResultT _o) {
    _o.Code = this.Code;
    _o.Reason = this.Reason;
  }
  public static Offset<Gamium.Protocol.Types.ErrorResult> Pack(FlatBufferBuilder builder, ErrorResultT _o) {
    if (_o == null) return default(Offset<Gamium.Protocol.Types.ErrorResult>);
    var _reason = _o.Reason == null ? default(StringOffset) : builder.CreateString(_o.Reason);
    return CreateErrorResult(
      builder,
      _o.Code,
      _reason);
  }
}

public class ErrorResultT
{
  public Gamium.Protocol.Types.ErrorCode Code { get; set; }
  public string Reason { get; set; }

  public ErrorResultT() {
    this.Code = Gamium.Protocol.Types.ErrorCode.None;
    this.Reason = null;
  }
}


}
