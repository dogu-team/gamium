// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Gamium.Protocol.Types
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ObjectLocator : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static ObjectLocator GetRootAsObjectLocator(ByteBuffer _bb) { return GetRootAsObjectLocator(_bb, new ObjectLocator()); }
  public static ObjectLocator GetRootAsObjectLocator(ByteBuffer _bb, ObjectLocator obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ObjectLocator __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Gamium.Protocol.Types.ObjectLocatorBy By { get { int o = __p.__offset(4); return o != 0 ? (Gamium.Protocol.Types.ObjectLocatorBy)__p.bb.GetShort(o + __p.bb_pos) : Gamium.Protocol.Types.ObjectLocatorBy.Path; } }
  public string Str { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStrBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetStrBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetStrArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<Gamium.Protocol.Types.ObjectLocator> CreateObjectLocator(FlatBufferBuilder builder,
      Gamium.Protocol.Types.ObjectLocatorBy by = Gamium.Protocol.Types.ObjectLocatorBy.Path,
      StringOffset strOffset = default(StringOffset)) {
    builder.StartTable(2);
    ObjectLocator.AddStr(builder, strOffset);
    ObjectLocator.AddBy(builder, by);
    return ObjectLocator.EndObjectLocator(builder);
  }

  public static void StartObjectLocator(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddBy(FlatBufferBuilder builder, Gamium.Protocol.Types.ObjectLocatorBy by) { builder.AddShort(0, (short)by, 0); }
  public static void AddStr(FlatBufferBuilder builder, StringOffset strOffset) { builder.AddOffset(1, strOffset.Value, 0); }
  public static Offset<Gamium.Protocol.Types.ObjectLocator> EndObjectLocator(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Gamium.Protocol.Types.ObjectLocator>(o);
  }
  public ObjectLocatorT UnPack() {
    var _o = new ObjectLocatorT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ObjectLocatorT _o) {
    _o.By = this.By;
    _o.Str = this.Str;
  }
  public static Offset<Gamium.Protocol.Types.ObjectLocator> Pack(FlatBufferBuilder builder, ObjectLocatorT _o) {
    if (_o == null) return default(Offset<Gamium.Protocol.Types.ObjectLocator>);
    var _str = _o.Str == null ? default(StringOffset) : builder.CreateString(_o.Str);
    return CreateObjectLocator(
      builder,
      _o.By,
      _str);
  }
}

public class ObjectLocatorT
{
  public Gamium.Protocol.Types.ObjectLocatorBy By { get; set; }
  public string Str { get; set; }

  public ObjectLocatorT() {
    this.By = Gamium.Protocol.Types.ObjectLocatorBy.Path;
    this.Str = null;
  }
}


}
