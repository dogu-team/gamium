// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Gamium.Protocol.Packets
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ChangeConfigurationResult : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static ChangeConfigurationResult GetRootAsChangeConfigurationResult(ByteBuffer _bb) { return GetRootAsChangeConfigurationResult(_bb, new ChangeConfigurationResult()); }
  public static ChangeConfigurationResult GetRootAsChangeConfigurationResult(ByteBuffer _bb, ChangeConfigurationResult obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ChangeConfigurationResult __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartChangeConfigurationResult(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<Gamium.Protocol.Packets.ChangeConfigurationResult> EndChangeConfigurationResult(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Gamium.Protocol.Packets.ChangeConfigurationResult>(o);
  }
  public ChangeConfigurationResultT UnPack() {
    var _o = new ChangeConfigurationResultT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ChangeConfigurationResultT _o) {
  }
  public static Offset<Gamium.Protocol.Packets.ChangeConfigurationResult> Pack(FlatBufferBuilder builder, ChangeConfigurationResultT _o) {
    if (_o == null) return default(Offset<Gamium.Protocol.Packets.ChangeConfigurationResult>);
    StartChangeConfigurationResult(builder);
    return EndChangeConfigurationResult(builder);
  }
}

public class ChangeConfigurationResultT
{

  public ChangeConfigurationResultT() {
  }
}


}
