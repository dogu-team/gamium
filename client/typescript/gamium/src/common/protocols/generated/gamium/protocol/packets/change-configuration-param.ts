// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Configuration, ConfigurationT } from '../../../gamium/protocol/types/configuration.js';

export class ChangeConfigurationParam implements flatbuffers.IUnpackableObject<ChangeConfigurationParamT> {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): ChangeConfigurationParam {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsChangeConfigurationParam(bb: flatbuffers.ByteBuffer, obj?: ChangeConfigurationParam): ChangeConfigurationParam {
    return (obj || new ChangeConfigurationParam()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static getSizePrefixedRootAsChangeConfigurationParam(bb: flatbuffers.ByteBuffer, obj?: ChangeConfigurationParam): ChangeConfigurationParam {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new ChangeConfigurationParam()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  config(obj?: Configuration): Configuration | null {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? (obj || new Configuration()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
  }

  static startChangeConfigurationParam(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  static addConfig(builder: flatbuffers.Builder, configOffset: flatbuffers.Offset) {
    builder.addFieldOffset(0, configOffset, 0);
  }

  static endChangeConfigurationParam(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static createChangeConfigurationParam(builder: flatbuffers.Builder, configOffset: flatbuffers.Offset): flatbuffers.Offset {
    ChangeConfigurationParam.startChangeConfigurationParam(builder);
    ChangeConfigurationParam.addConfig(builder, configOffset);
    return ChangeConfigurationParam.endChangeConfigurationParam(builder);
  }

  unpack(): ChangeConfigurationParamT {
    return new ChangeConfigurationParamT(this.config() !== null ? this.config()!.unpack() : null);
  }

  unpackTo(_o: ChangeConfigurationParamT): void {
    _o.config = this.config() !== null ? this.config()!.unpack() : null;
  }
}

export class ChangeConfigurationParamT implements flatbuffers.IGeneratedObject {
  constructor(public config: ConfigurationT | null = null) {}

  pack(builder: flatbuffers.Builder): flatbuffers.Offset {
    const config = this.config !== null ? this.config!.pack(builder) : 0;

    return ChangeConfigurationParam.createChangeConfigurationParam(builder, config);
  }
}
