// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Gamium.Protocol.Packets
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct FindObjectsParam : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static FindObjectsParam GetRootAsFindObjectsParam(ByteBuffer _bb) { return GetRootAsFindObjectsParam(_bb, new FindObjectsParam()); }
  public static FindObjectsParam GetRootAsFindObjectsParam(ByteBuffer _bb, FindObjectsParam obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FindObjectsParam __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Gamium.Protocol.Types.ObjectLocator? Locator { get { int o = __p.__offset(4); return o != 0 ? (Gamium.Protocol.Types.ObjectLocator?)(new Gamium.Protocol.Types.ObjectLocator()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<Gamium.Protocol.Packets.FindObjectsParam> CreateFindObjectsParam(FlatBufferBuilder builder,
      Offset<Gamium.Protocol.Types.ObjectLocator> locatorOffset = default(Offset<Gamium.Protocol.Types.ObjectLocator>)) {
    builder.StartTable(1);
    FindObjectsParam.AddLocator(builder, locatorOffset);
    return FindObjectsParam.EndFindObjectsParam(builder);
  }

  public static void StartFindObjectsParam(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddLocator(FlatBufferBuilder builder, Offset<Gamium.Protocol.Types.ObjectLocator> locatorOffset) { builder.AddOffset(0, locatorOffset.Value, 0); }
  public static Offset<Gamium.Protocol.Packets.FindObjectsParam> EndFindObjectsParam(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Gamium.Protocol.Packets.FindObjectsParam>(o);
  }
  public FindObjectsParamT UnPack() {
    var _o = new FindObjectsParamT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FindObjectsParamT _o) {
    _o.Locator = this.Locator.HasValue ? this.Locator.Value.UnPack() : null;
  }
  public static Offset<Gamium.Protocol.Packets.FindObjectsParam> Pack(FlatBufferBuilder builder, FindObjectsParamT _o) {
    if (_o == null) return default(Offset<Gamium.Protocol.Packets.FindObjectsParam>);
    var _locator = _o.Locator == null ? default(Offset<Gamium.Protocol.Types.ObjectLocator>) : Gamium.Protocol.Types.ObjectLocator.Pack(builder, _o.Locator);
    return CreateFindObjectsParam(
      builder,
      _locator);
  }
}

public class FindObjectsParamT
{
  public Gamium.Protocol.Types.ObjectLocatorT Locator { get; set; }

  public FindObjectsParamT() {
    this.Locator = null;
  }
}


}
