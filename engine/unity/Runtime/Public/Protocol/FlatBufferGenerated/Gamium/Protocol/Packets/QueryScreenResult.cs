// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Gamium.Protocol.Packets
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct QueryScreenResult : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static QueryScreenResult GetRootAsQueryScreenResult(ByteBuffer _bb) { return GetRootAsQueryScreenResult(_bb, new QueryScreenResult()); }
  public static QueryScreenResult GetRootAsQueryScreenResult(ByteBuffer _bb, QueryScreenResult obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public QueryScreenResult __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Width { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Height { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Gamium.Protocol.Packets.QueryScreenResult> CreateQueryScreenResult(FlatBufferBuilder builder,
      int width = 0,
      int height = 0) {
    builder.StartTable(2);
    QueryScreenResult.AddHeight(builder, height);
    QueryScreenResult.AddWidth(builder, width);
    return QueryScreenResult.EndQueryScreenResult(builder);
  }

  public static void StartQueryScreenResult(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddWidth(FlatBufferBuilder builder, int width) { builder.AddInt(0, width, 0); }
  public static void AddHeight(FlatBufferBuilder builder, int height) { builder.AddInt(1, height, 0); }
  public static Offset<Gamium.Protocol.Packets.QueryScreenResult> EndQueryScreenResult(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Gamium.Protocol.Packets.QueryScreenResult>(o);
  }
  public QueryScreenResultT UnPack() {
    var _o = new QueryScreenResultT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(QueryScreenResultT _o) {
    _o.Width = this.Width;
    _o.Height = this.Height;
  }
  public static Offset<Gamium.Protocol.Packets.QueryScreenResult> Pack(FlatBufferBuilder builder, QueryScreenResultT _o) {
    if (_o == null) return default(Offset<Gamium.Protocol.Packets.QueryScreenResult>);
    return CreateQueryScreenResult(
      builder,
      _o.Width,
      _o.Height);
  }
}

public class QueryScreenResultT
{
  public int Width { get; set; }
  public int Height { get; set; }

  public QueryScreenResultT() {
    this.Width = 0;
    this.Height = 0;
  }
}


}
